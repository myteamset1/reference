


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>流加载</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link href="~/assets/layui/css/layui.css" rel="stylesheet" />
</head>
<body>
    <div id="app">
        <ul id="demo" v-for="list in lists">
            <li v-html="list.description"></li>
        </ul>
        @*<ul id="demo"></ul>*@
    </div>
    <script src="~/assets/layui/layui.js"></script>
    <script src="~/js/vue-resource.min1.5.0.js"></script>
    <script src="~/js/vue.min2.5.16.js"></script>
    <script>
        var vue = new Vue({
            el: "#app",
            data: {
                lists: [],
                pageCount: 1
            },
            methods: {
                setdata: function (lists, pageCount) {
                    this.lists = lists;
                    this.pageCount = pageCount;
                }
            },
            mounted: function () {               
                layui.use('flow', function () {
                    var that = this;
                    var $ = layui.jquery; //不用额外加载jQuery，flow模块本身是有依赖jQuery的，直接用即可。
                    var flow = layui.flow;
                    flow.load({
                        elem: that.lists //指定列表容器
                        , done: function (page, next) { //到达临界点（默认滚动触发），触发下一页
                            var lis = [];
                            console.log(that.lists);
                            //以jQuery的Ajax请求为例，请求下一页数据（注意：page是从2开始返回）
                            $.get('/api/list?page=' + page, function (res) {
                                //假设你的列表返回在data集合中
                                layui.each(res.data, function (index, item) {
                                    lis.push('<li>' + item.title + '</li>');
                                });

                                //执行下一页渲染，第二参数为：满足“加载更多”的条件，即后面仍有分页
                                //pages为Ajax返回的总页数，只有当前页小于总页数的情况下，才会继续出现加载更多
                                next(lis.join(''), page < res.pages);
                            });
                        }
                    });
                });
            }
        });

    </script>
</body>
</html>