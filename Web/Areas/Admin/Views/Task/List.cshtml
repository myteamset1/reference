<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="~/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/style.css" />
    <link href="~/assets/css/codemirror.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/css/ace.min.css" />
    <link rel="stylesheet" href="~/assets/css/font-awesome.min.css" />
    <link href="~/css/page.css" rel="stylesheet" />
    <script src="~/assets/js/jquery.min.js"></script>
    <!--[if IE]>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <![endif]-->
    <!--[if !IE]> -->
    <script type="text/javascript">
        window.jQuery || document.write("<script src='/assets/js/jquery-2.0.3.min.js'>" + "<" + "/script>");
    </script>
    <!-- <![endif]-->
    <script type="text/javascript">
        if ("ontouchend" in document) document.write("<script src='/assets/js/jquery.mobile.custom.min.js'>" + "<" + "/script>");
    </script>
    <script type="text/javascript" src="~/js/vue.min2.5.16.js"></script>
    <script type="text/javascript" src="~/js/vue-resource.min1.5.0.js"></script>
    <script src="~/assets/js/bootstrap.min.js"></script>
    <script src="~/assets/js/typeahead-bs2.min.js"></script>
    <!-- page specific plugin scripts -->
    <script src="~/assets/js/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/jquery.dataTables.bootstrap.js"></script>
    <script type="text/javascript" src="~/js/H-ui.js"></script>
    <script type="text/javascript" src="~/js/H-ui.admin.js"></script>
    <script src="~/assets/layer/layer.js" type="text/javascript"></script>
    @*<script src="~/assets/laydate/laydate.js" type="text/javascript"></script>*@
    <script src="~/assets/src/laydate.js"></script>
    <script src="~/js/wangEditor.min.js"></script>
    <title>任务管理</title>
</head>

<body>
    <div id="app">
        <div class="clearfix" style="margin-top:20px">
            <span class="l_f">
                <a v-on:click="add" class="btn btn-success"><i class="icon-plus"></i>新增任务</a>
            </span>
        </div>
        <div class="search_style">
            <ul class="search_content clearfix">
                <li>
                    <label class="l_f">任务标题</label>
                    <input name="" v-model="searchs.keyword" type="text" class="text_add" placeholder="任务标题" style="width:150px" />
                </li>
                <li style="width:90px;"><button type="button" v-on:click="search" class="btn_search"><i class="icon-search"></i>查询</button></li>
            </ul>
        </div>
        <div class="table_menu_list">
            <table class="table table-striped table-bordered table-hover" id="sample-table">
                <thead>
                    <tr>
                        <th width="60">编号</th>
                        <th width="100">任务编号</th>
                        <th width="100">任务标题</th>
                        <th width="100">任务佣金</th>
                        <th width="100">完成条件</th>
                        <th width="100">简介说明</th>
                        <th width="100">结束时间</th>
                        <th width="100">发布人</th>
                        <th width="60">状态</th>
                        <th width="120">操作</th>
                    </tr>
                </thead>
                <tbody v-for="task in tasks">
                    <tr>
                        <td v-html="task.id"></td>
                        <td v-html="task.code"></td>
                        <td v-html="task.title"></td>
                        <td v-html="task.bonus"></td>
                        <td v-html="task.condition"></td>
                        <td v-html="task.explain"></td>
                        <td v-html="task.endTime"></td>
                        <td v-html="task.publisher"></td>
                        <td v-html="task.isEnabled==true?'已启用':'停用'"></td>
                        <td>
                            <a v-on:click="edit(task.id)" href="javascript:;" title="修改公告" class="btn btn-xs btn-success">修改任务</a>
                            <a title="删除" href="javascript:;" v-on:click="del(task.id)" class="btn btn-xs btn-warning">删除任务</a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="page-bar">
            <ul>
                <li><a v-on:click="pages.cur=1,getpage()">首页</a></li>
                <li v-if="pages.cur>1"><a v-on:click="pages.cur--,getpage()">上一页</a></li>
                <li v-if="pages.cur==1"><a class="banclick">上一页</a></li>
                <li v-for="index in indexs" v-bind:class="{'active':pages.cur==index}"><a v-on:click="pageclick(index)" v-html="index"></a></li>
                <li v-if="pages.cur!=pages.all"><a v-on:click="pages.cur++,getpage()">下一页</a></li>
                <li v-if="pages.cur==pages.all"><a class="banclick">下一页</a></li>
                <li><a><input type='text' id='txtpage' style='width: 30px;height: 18px;' v-model="pages.txtpage" onkeyup="value=value.replace(/[^\d]/g,'')" /></a></li>
                <li><a id='go' v-on:click="go">跳转</a></li>
                <li><a v-on:click="pages.cur=pages.all,getpage()">尾页</a></li>
                <li><a>共<i><font v-html="pages.all"></font></i>页</a></li>
            </ul>
        </div>

        <!--添加用户图层-->
        <div class="add_menber" id="add" style="display:none">
            <ul class="page-content">
                <li><label class="label_name">任务标题：</label><span class="add_name"><input value="" maxlength="100" placeholder="任务标题" v-model="adds.title" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务佣金：</label><span class="add_name"><input value="" maxlength="8" placeholder="任务佣金" v-model="adds.bonus" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">完成条件：</label><span class="add_name"><input value="" maxlength="200" placeholder="完成条件" v-model="adds.condition" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务简介说明：</label><span class="add_name"><input value="" maxlength="200" placeholder="任务简介说明" v-model="adds.explain" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">失效时间：</label><span class="add_name"><input class="layui-input" id="failureTime" style="margin-left:10px;height:28px;" v-on:focus='getfailuretime' /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务内容：</label><div class="prompt r_f"></div></li>
                <li>
                    <div id="content1" style="margin-left:30px;width:1000px"></div>
                </li>
            </ul>
        </div>

        <!--修改用户图层-->
        <div class="add_menber" id="edit" style="display:none">
            <ul class="page-content">
                <li><label class="label_name">任务标题：</label><span class="add_name"><input value="" maxlength="100" placeholder="任务标题" v-model="edits.title" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务佣金：</label><span class="add_name"><input value="" maxlength="8" placeholder="任务佣金" v-model="edits.bonus" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">完成条件：</label><span class="add_name"><input value="" maxlength="200" placeholder="完成条件" v-model="edits.condition" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务简介说明：</label><span class="add_name"><input value="" maxlength="200" placeholder="任务简介说明" v-model="edits.explain" type="text" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">失效时间：</label><span class="add_name"><input class="layui-input" id="failureTime1" style="margin-left:10px;height:28px;" v-on:focus='getfailuretime1' /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">任务内容：</label><div class="prompt r_f"></div></li>
                <li>
                    <div id="content2" style="margin-left:30px;width:1000px"></div>
                </li>
            </ul>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    var startTime;
    var endTime;
    var vue = new Vue({
        el: "#app",
        data: {
            tasks: [],
            testtime: "",
            pages: {
                all: "", cur: 1, txtpage: ""
            },
            adds: {
                title: "", bonus: "", condition: "", explain: "", content: "", endTime: ""
            },
            edits: {
                title: "", bonus: "", condition: "", explain: "", content: "", endTime: ""
            },
            searchs: {
                startTime: "", endTime: "", keyword: ""
            }
        },
        methods: {
            getfailuretime: function () {
                var that = this;
                that.adds.endTime = "";
                laydate.render({
                    elem: '#failureTime',
                    type: 'datetime',
                    done: function (date) {
                        that.adds.endTime = date;
                    }
                });
            },
            getfailuretime1: function () {
                var that = this;
                that.edits.endTime = "";
                laydate.render({
                    elem: '#failureTime1',
                    type: 'datetime',
                    done: function (date) {
                        that.edits.endTime = date;
                    }
                });
            },
            getpage: function () {
                this.$http.post('/admin/task/list', { keyword: this.searchs.keyword, startTime: this.searchs.startTime, endTime: this.searchs.endTime, pageIndex: this.pages.cur }, { emulateJSON: true }).then(function (result) {
                    this.tasks = result.data.data.tasks;
                    this.pages.all = result.data.data.pageCount;
                })
            },
            pageclick: function (index) {//页码点击事件
                if (index != this.cur) {
                    this.pages.cur = index
                }
                this.getpage();
            },
            go: function () {
                if (this.pages.txtpage == "") {
                    return;
                }
                else {
                    this.pages.cur = this.pages.txtpage;
                }
                this.getpage();
            },
            add: function () {
                var that = this;
                that.adds.title = "";
                that.adds.failureTime = "";
                that.adds.content = "";
                layer.open({
                    type: 1,
                    title: '添加任务',
                    maxmin: true,
                    shadeClose: false, //点击遮罩关闭层
                    area: ['1200px', '600px'],
                    content: $('#add'),
                    btn: ['确认', '取消'],
                    yes: function (index, layero) {
                        if (that.adds.title == "") {
                            layer.alert('任务标题不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        var reg = /^[+]{0,1}(\d+)$|^[+]{0,1}(\d+\.\d+)$/;
                        if (!reg.test(that.adds.bonus)) {
                            layer.msg('请输入正确的任务佣金金额', { icon: 1 });
                            return;
                        }
                        if (that.adds.bonus <= 0) {
                            layer.msg('任务佣金金额必须大于零', { icon: 1 });
                            return;
                        }
                        if (that.adds.condition == "") {
                            layer.alert('完成条件不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        if (that.adds.explain == "") {
                            layer.alert('任务简介说明不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        if (that.adds.endTime == "") {
                            layer.alert('失效时间不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        that.adds.content = editor1.txt.html();
                        if (that.adds.content == "") {
                            layer.alert('任务内容不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        that.$http.post('/admin/task/add', { title: that.adds.title, bonus: that.adds.bonus, condition: that.adds.condition, explain: that.adds.explain, content: that.adds.content, endTime: that.adds.endTime }, { emulateJSON: true }).then(function (result) {
                            if (result.data.status == 1) {
                                layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                                layer.close(index);
                                that.getpage();
                            }
                            else if (result.data.status == 0) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                            else if (result.data.status == 302) {
                                window.location.href = result.data.data;
                            }
                            else if (result.data.status == 401) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                        });
                    }
                });
            },
            edit: function (id) {
                var that = this;
                that.$http.post('/admin/task/getmodel', { id: id }, { emulateJSON: true }).then(function (result) {
                    that.edits = result.data.data;
                    $("#failureTime1").val(that.edits.endTime);
                    editor2.txt.html(result.data.data.content);
                });
                layer.open({
                    type: 1,
                    title: '修改任务',
                    maxmin: true,
                    shadeClose: false, //点击遮罩关闭层
                    area: ['1200px', '600px'],
                    content: $('#edit'),
                    btn: ['确认', '取消'],
                    yes: function (index, layero) {
                        if (that.edits.title == "") {
                            layer.alert('任务标题不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        var reg = /^[+]{0,1}(\d+)$|^[+]{0,1}(\d+\.\d+)$/;
                        if (!reg.test(that.edits.bonus)) {
                            layer.msg('请输入正确的任务佣金金额', { icon: 1 });
                            return;
                        }
                        if (that.edits.bonus <= 0) {
                            layer.msg('任务佣金金额必须大于零', { icon: 1 });
                            return;
                        }
                        if (that.edits.condition == "") {
                            layer.alert('完成条件不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        if (that.edits.explain == "") {
                            layer.alert('任务简介说明不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        if (that.edits.endTime == "") {
                            layer.alert('失效时间不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        that.edits.content = editor2.txt.html();
                        if (that.edits.content == "") {
                            layer.alert('任务内容不能为空', { icon: 0, title: '提示框' });
                            return;
                        }
                        that.$http.post('/admin/task/edit', { id: id, title: that.edits.title, bonus: that.edits.bonus, condition: that.edits.condition, explain: that.edits.explain, content: that.edits.content, endTime: that.edits.endTime }, { emulateJSON: true }).then(function (result) {
                            if (result.data.status == 1) {
                                layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                                layer.close(index);
                                that.getpage();
                            }
                            else if (result.data.status == 0) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                            else if (result.data.status == 302) {
                                window.location.href = result.data.data;
                            }
                            else if (result.data.status == 401) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                        });
                    }
                });
            },
            del: function (id) {
                var that = this;
                layer.confirm("任务删除后无法恢复，确认删除吗？", { icon: 0, title: '是否删除任务' }, function (index) {
                    that.$http.post('/admin/task/del', { id: id }, { emulateJSON: true }).then(function (result) {
                        if (result.data.status == 1) {
                            layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                            that.getpage();
                        }
                        else if (result.data.status == 0) {
                            layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            //that.msg = result.data.msg;
                        }
                        else if (result.data.status == 302) {
                            window.location.href = result.data.data;
                        }
                        else if (result.data.status == 401) {
                            layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                        }
                    });
                });
            },
            search: function () {
                this.getpage();
            }
        },
        computed: {
            indexs: function () {
                var count = 0;
                var left = 1;
                var right = this.pages.all;
                var ar = [];
                if (this.pages.all >= 5) {
                    if (this.pages.cur > 3 && this.pages.cur < this.pages.all - 2) {
                        left = Number(this.pages.cur) - 2;
                        right = Number(this.pages.cur) + 2;
                    } else {
                        if (this.pages.cur <= 3) {
                            left = 1
                            right = 5
                        } else {
                            right = this.pages.all
                            left = Number(this.pages.all) - 4
                        }
                    }
                }
                while (left <= right) {
                    ar.push(left)
                    left++
                }
                return ar
            }
        },
        mounted: function () {
            var that = this;
            laydate.render({
                elem: '#failureTime',
                type: 'datetime',
                done: function (date) {
                    that.adds.endTime = date;
                }
            });
            laydate.render({
                elem: '#failureTime1',
                type: 'datetime',
                done: function (date) {
                    that.edits.endTime = date;
                }
            });
            this.$http.post('/admin/task/list', { keyword: this.searchs.keyword, startTime: this.searchs.startTime, endTime: this.searchs.endTime, pageIndex: this.pages.cur }, { emulateJSON: true }).then(function (result) {
                this.tasks = result.data.data.tasks;
                this.pages.all = result.data.data.pageCount;
            })
        }
    });

    //编辑器
    var E = window.wangEditor;
    var editor1 = new E('#content1');
    editor1.customConfig.uploadImgMaxSize = 3 * 1024 * 1024
    editor1.customConfig.uploadImgMaxLength = 1
    editor1.customConfig.uploadImgShowBase64 = true
    editor1.customConfig.uploadFileName = 'imgfile'
    editor1.customConfig.uploadImgServer = '/admin/task/upcontentimg'
    editor1.create();

    var editor2 = new E('#content2');
    editor2.customConfig.uploadImgMaxSize = 3 * 1024 * 1024
    editor2.customConfig.uploadImgMaxLength = 1
    editor2.customConfig.uploadImgShowBase64 = true
    editor2.customConfig.uploadFileName = 'imgfile'
    editor2.customConfig.uploadImgServer = '/admin/task/upcontentimg'
    editor2.create();

    //laydate.render({
    //    elem: 'failureTime',
    //    event: 'focus',
    //    type: 'datetime'
    //});
    //laydate.render({
    //    elem: 'failureTime1',
    //    event: 'focus',
    //    type: 'datetime'
    //});
</script>
